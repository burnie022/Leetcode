"""
There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.
You are giving candies to these children subjected to the following requirements:

Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.
Return the minimum number of candies you need to have to distribute the candies to the children.

Example 1:
    Input: ratings = [1,0,2]
    Output: 5
    Explanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.
Example 2:
    Input: ratings = [1,2,2]
    Output: 4
    Explanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.
        The third child gets 1 candy because it satisfies the above two conditions.

Constraints:
    n == ratings.length
    1 <= n <= 2 * 10^4
    0 <= ratings[i] <= 2 * 10^4
"""
from typing import List


class Solution:
    def candy(self, ratings: List[int]) -> int:
        if len(ratings) == 1:
            return 1
        ans = [2 if ratings[0] > ratings[1] else 1]
        for i in range(1, len(ratings)):
            ans.append(ans[-1] + 1 if ratings[i] > ratings[i-1] else 1)

        ans[-1] = max(ans[-1], 2 if ratings[len(ratings)-1] > ratings[len(ratings)-2] else 1)
        for i in range(len(ratings) - 2, -1, -1):
            ans[i] = max(ans[i], ans[i+1] + 1 if ratings[i] > ratings[i+1] else 1)

        return sum(ans)


        # if len(ratings) == 1:
        #     return 1
        # forward = [2 if ratings[0] > ratings[1] else 1]
        # for i in range(1, len(ratings)):
        #     forward.append(forward[-1] + 1 if ratings[i] > ratings[i - 1] else 1)
        #
        # back = [2 if ratings[len(ratings) - 1] > ratings[len(ratings) - 2] else 1]
        # for i in range(len(ratings) - 2, -1, -1):
        #     back.append(back[-1] + 1 if ratings[i] > ratings[i + 1] else 1)
        #
        # return sum(max(forward[i], back[::-1][i]) for i in range(len(forward)))


if __name__ == "__m" \
               "" \
               "ain__":
    obj = Solution()
    tests = [
        [1,0,2],
        [1,2,2],
        [1, 2, 2, 3, 4, 5, 6, 3, 1],
        [1, 2, 3, 4, 5],
        [1, 2, 3, 4, 5, 1],
        [1, 2, 3, 4, 5, 3, 1],
        [4, 5, 6, 7, 6, 5, 4, 3, 2, 1],
        [2, 1],
        [2,3,1,0],
        [2,3,4,5,6,4,3,2,1,0],
        [42, 16, 48, 45, 34, 44, 48, 28, 44, 29, 9, 0, 31, 19, 46, 45, 43, 46, 4, 17, 33, 4, 42, 49, 19, 42, 17, 24, 39,
         38, 22, 4, 43, 39, 34, 4, 19, 7, 3, 41, 29, 12, 32, 38, 19, 17, 43, 30, 16, 46, 8, 16, 31, 20, 14, 35, 31, 14,
         8, 0, 6, 39, 47, 38, 20, 44, 21, 36, 12, 38, 8, 18, 39, 36, 33, 31, 48, 13, 48, 16, 21, 12, 9, 24, 42, 38, 45,
         31, 49, 11, 27, 49, 47, 20, 10, 14, 4, 15, 34, 19, 0, 0, 22, 20, 2, 43, 43, 23, 22, 28, 5, 6, 17, 21, 3, 5, 23,
         11, 33, 5, 30, 31, 36, 10, 45, 25, 27, 6, 43, 6, 14, 4, 7, 10, 8, 15, 12, 44, 24, 40, 23, 45, 36, 5, 49, 34,
         27, 28, 23, 22, 9, 43, 7, 33, 22, 15, 17, 38, 21, 44, 33, 28, 41, 44, 6, 27, 11, 30, 2, 19, 6, 29, 20, 28, 49,
         48, 15, 23, 12, 27, 16, 45, 18, 12, 31, 39, 1, 7, 47, 34, 38, 49, 31, 13, 0, 34, 31, 13, 2, 23, 12, 30, 49, 29,
         40, 16, 23, 48, 38, 41, 36, 22, 48, 2, 1, 48, 15, 0, 32, 49, 25, 28, 49, 36, 41, 44, 40, 48, 40, 23, 49, 17,
         16, 13, 18, 16, 13, 45, 13, 18, 19, 45, 19, 11, 12, 33, 38, 27, 48, 22, 22, 31, 50, 46, 39, 11, 47, 47, 6, 38,
         22, 20, 21, 28, 32, 2, 18, 42, 1, 22, 4, 21, 7, 7, 19, 31, 42, 16, 18, 11, 30, 2, 45, 20, 35, 14, 35, 24, 31,
         32, 30, 26, 43, 40, 15, 35, 45, 42, 12, 38, 5, 31, 50, 36, 22, 10, 3, 38, 44, 38, 31, 9, 31, 46, 0, 37, 13, 49,
         49, 49, 3, 16, 40, 9, 42, 44, 48, 36, 30, 23, 23, 20, 44, 23, 10, 30, 22, 4, 27, 9, 25, 35, 14, 34, 39, 5, 14,
         3, 27, 7, 39, 17, 8, 0, 46, 35, 48, 11, 21, 50, 15, 40, 42, 42, 4, 5, 43, 35, 50, 23, 15, 50, 46, 43, 18, 2,
         16, 27, 6, 46, 38, 10, 42, 19, 30, 28, 18, 24, 16, 39, 3, 24, 43, 16, 45, 10, 23, 30, 28, 0, 40, 44, 48, 28,
         48, 29, 21, 44, 4, 46, 8, 4, 41, 21, 22, 23, 36, 50, 49, 31, 33, 12, 13, 25, 15, 20, 28, 20, 37, 25, 42, 13,
         28, 42, 48, 37, 15, 46, 31, 40, 28, 12, 1, 22, 18, 35, 0, 26, 10, 14, 11, 17, 40, 27, 24, 46, 35, 5, 8, 18, 27,
         35, 13, 21, 20, 48, 10, 40, 19, 23, 29, 40, 35, 20, 13, 44, 4, 14, 10, 17, 2, 13, 17, 14, 12, 49, 33, 14, 9,
         45, 0, 50, 18, 47, 7, 31, 23, 25, 0, 36, 6, 44, 38, 11, 27, 11, 12, 22, 32, 25, 45, 37, 7, 31, 46, 31, 7, 21,
         25, 37, 4, 6, 10, 33, 9, 43, 21, 17, 41, 44, 4, 4, 11, 18, 24, 26, 39, 12, 24, 9, 24, 30, 47, 38, 46, 3, 0, 14,
         39, 3, 43, 38, 0, 39, 45, 40, 12, 3, 4, 30, 8, 4, 36, 1, 49, 2, 41, 9, 12, 21, 22, 26, 17, 14, 28, 14, 44, 47,
         18, 39, 20, 8, 18, 3, 8, 50, 28, 42, 35, 42, 50, 22, 37, 41, 19, 23, 9, 6, 0, 11, 47, 34, 20, 37, 32, 46, 26,
         38, 22, 46, 46, 15, 25, 38, 14, 2, 2, 45, 36, 50, 4, 13, 22, 10, 11, 21, 22, 30, 32, 17, 43, 50, 39, 5, 11, 36,
         12, 13, 20, 7, 32, 42, 15, 10, 8, 23, 10, 11, 34, 15, 43, 40, 0, 40, 29, 39, 24, 44, 37, 46, 3, 2, 12, 26, 38,
         37, 23, 10, 9, 14, 34, 44, 24, 37, 39, 26, 0, 33, 8, 19, 44, 48, 39, 18, 10, 28, 32, 8, 46, 24, 17, 11, 49, 2,
         45, 5, 28, 20, 41, 18, 36, 1, 29, 29, 0, 4, 20, 2, 15, 25, 47, 26, 33, 36, 14, 31, 13, 29, 17, 44, 22, 15, 48,
         34, 21, 16, 11, 20, 16, 17, 40, 29, 22, 50, 25, 23, 24, 36, 48, 11, 2, 44, 1, 35, 30, 9, 23, 19, 33, 18, 50, 6,
         11, 41, 20, 31, 20, 15, 34, 34, 50, 28, 9, 18, 18, 40, 35, 18, 13, 39, 45, 25, 14, 48, 33, 48, 29, 23, 42, 26,
         11, 43, 0, 33, 9, 25, 2, 48, 27, 45, 30, 42, 4, 41, 46, 33, 6, 3, 28, 25, 15, 31, 18, 3, 21, 20, 49, 30, 1, 38,
         2, 49, 12, 5, 5, 32, 42, 0, 40, 36, 43, 28, 1, 48, 22, 26, 2, 23, 17, 28, 11, 1, 29, 45, 46, 0, 17, 49, 4, 6,
         41, 26, 1, 18, 45, 9, 2, 13, 7, 28, 18, 32, 23, 28, 44, 30, 40, 29, 34, 34, 24, 29, 38, 21, 19, 19, 28, 8, 39,
         5, 37, 37, 26, 3, 22, 32, 12, 5, 21, 27, 39, 0, 18, 13, 13, 18, 48, 8, 32, 28, 34, 16, 42, 34, 39, 10, 50, 34,
         16, 11, 13, 20, 32, 18, 16, 30, 48, 7, 39, 20, 47, 3, 40, 28, 39, 15, 30, 14, 15, 1, 8, 45, 7, 48, 41, 38, 27,
         49, 6, 42, 28, 47, 1, 15, 15, 15, 41, 31, 39, 37, 23, 34, 21, 46, 43, 42, 46, 50, 9, 38, 4, 18, 49, 35, 33, 2,
         37, 6, 5, 8, 49, 8, 17, 49, 23, 41, 9, 15, 44, 43, 39, 12, 11, 23, 48, 20, 42, 6, 33, 34, 13, 36, 19, 44, 2, 3,
         11, 10, 18, 40, 45, 19, 22, 6, 22, 4, 16, 32, 30, 31],
        [8, 10, 14, 29, 13, 10, 35, 36, 7, 16, 26, 47, 35, 34, 39, 43, 6, 30, 21, 11, 29, 32, 46, 37, 30, 19, 21, 3, 11,
         16, 18, 33, 30, 49, 25, 34, 17, 37, 23, 26, 0, 29, 46, 42, 45, 10, 5, 27, 7, 24, 45, 0, 28, 14, 36, 18, 13, 34,
         6, 3, 46, 34, 30, 47, 35, 3, 48, 4, 42, 22, 46, 45, 28, 30, 39, 46, 22, 48, 50, 36, 42, 42, 38, 49, 38, 4, 37,
         2, 28, 43, 43, 42, 20, 31, 30, 23, 3, 9, 28, 46, 49, 26, 28, 50, 0, 19, 13, 33, 9, 4, 50, 40, 8, 0, 13, 40, 31,
         22, 32, 9, 43, 41, 22, 50, 4, 31, 23, 0, 28, 18, 33, 11, 10, 2, 10, 44, 14, 13, 9, 9, 41, 7, 13, 49, 1, 15, 33,
         38, 41, 13, 10, 17, 1, 0, 2, 1, 47, 17, 4, 29, 38, 1, 11, 49, 5, 8, 15, 48, 47, 16, 21, 33, 26, 43, 19, 42, 26,
         49, 44, 3, 1, 30, 35, 19, 47, 3, 42, 7, 38, 48, 3, 0, 7, 22, 18, 19, 16, 48, 49, 42, 25, 3, 8, 27, 5, 32, 18,
         46, 23, 28, 34, 28, 12, 44, 2, 32, 48, 33, 50, 23, 14, 16, 8, 33, 1, 5, 24, 35, 49, 44, 6, 21, 0, 8, 17, 20, 6,
         47, 34, 26, 20, 11, 49, 21, 5, 27, 47, 4, 15, 20, 43, 9, 35, 8, 17, 20, 7, 9, 31, 35, 42, 27, 0, 5, 19, 7, 1,
         35, 20, 25, 37, 22, 26, 28, 23, 34, 10, 31, 34, 9, 24, 3, 8, 47, 39, 45, 36, 22, 48, 14, 36, 10, 31, 4, 12, 1,
         1, 34, 6, 25, 3, 48, 43, 29, 34, 42, 5, 12, 27, 46, 22, 43, 37, 50, 30, 1, 15, 49, 33, 24, 8, 33, 16, 26, 44,
         0, 3, 28, 23, 0, 27, 16, 9, 46, 28, 11, 21, 39, 7, 20, 32, 27, 0, 45, 37, 20, 14, 2, 9, 27, 47, 8, 25, 34, 35,
         31, 18, 7, 18, 35, 15, 47, 13, 18, 26, 49, 13, 21, 4, 14, 48, 28, 10, 38, 30, 36, 10, 39, 19, 30, 35, 28, 2,
         10, 13, 0, 33, 8, 37, 42, 26, 3, 36, 18, 28, 16, 39, 34, 46, 16, 36, 23, 10, 11, 36, 4, 11, 13, 40, 18, 5, 15,
         20, 36, 4, 21, 8, 27, 41, 21, 11, 15, 16, 26, 5, 1, 36, 36, 35, 31, 33, 13, 40, 46, 37, 35, 1, 34, 22, 43, 38,
         34, 3, 10, 24, 41, 50, 44, 0, 32, 0, 35, 11, 13, 25, 38, 5, 33, 40, 8, 18, 50, 35, 43, 14, 0, 11, 18, 3, 12, 5,
         29, 35, 20, 50, 39, 18, 32, 8, 12, 34, 34, 38, 36, 29, 28, 17, 47, 3, 5, 8, 23, 18, 17, 6, 9, 18, 14, 42, 22,
         42, 12, 13, 47, 17, 32, 9, 44, 12, 27, 33, 44, 19, 44, 7, 41, 6, 13, 36, 29, 35, 16, 14, 34, 40, 27, 7, 18, 48,
         7, 18, 36, 13, 18, 15, 18, 22, 24, 8, 31, 26, 2, 41, 30, 1, 48, 32, 2, 23, 20, 21, 20, 16, 15, 35, 31, 14, 35,
         24, 44, 26, 48, 25, 33, 24, 36, 37, 34, 23, 13, 42, 37, 7, 23, 9, 16, 22, 10, 40, 24, 11, 37, 28, 1, 19, 24,
         31, 7, 37, 29, 37, 16, 40, 18, 30, 10, 47, 0, 30, 34, 36, 30, 36, 30, 26, 26, 16, 19, 38, 12, 14, 8, 49, 39,
         39, 16, 12, 28, 26, 43, 43, 34, 34, 38, 12, 13, 43, 31, 25, 29, 41, 31, 15, 15, 18, 2, 46, 45, 44, 0, 44, 43,
         48, 9, 40, 5, 22, 46, 10, 4, 41, 17, 48, 42, 13, 48, 42, 28, 33, 29, 8, 21, 22, 39, 36, 47, 13, 35, 36, 25, 16,
         46, 14, 5, 39, 25, 24, 10, 43, 45, 4, 31, 22, 3, 42, 46, 38, 28, 6, 34, 29, 45, 36, 39, 11, 19, 12, 14, 37, 48,
         29, 21, 11, 49, 44, 20, 15, 46, 44, 1, 23, 8, 42, 22, 21, 29, 10, 48, 30, 45, 40, 19, 39, 23, 43, 2, 32, 50,
         14, 48, 30, 35, 2, 3, 8, 44, 31, 2, 24, 16, 43, 37, 5, 5, 35, 42, 27, 7, 36, 37, 48, 25, 44, 16, 25, 9, 18, 14,
         8, 50, 44, 39, 49, 28, 43, 10, 45, 38, 34, 38, 18, 12, 23, 29, 36, 30, 32, 0, 4, 10, 27, 26, 45, 26, 7, 39, 31,
         14, 49, 5, 0, 44, 2, 17, 21, 22, 37, 41, 49, 22, 6, 25, 47, 30, 50, 17, 40, 48, 50, 16, 22, 30, 5, 42, 7, 10,
         39, 39, 23, 46, 38, 12, 43, 42, 3, 46, 20, 39, 30, 30, 40, 41, 10, 44, 50, 35, 39, 22, 1, 16, 25, 9, 18, 50,
         42, 27, 19, 0, 10, 31, 41, 22, 1, 40, 17, 26, 33, 38, 7, 38, 39, 3, 26, 27, 46, 48, 25, 24, 47, 8, 30, 38, 2,
         34, 21, 22, 4, 16, 37, 19, 4, 30, 34, 21, 6, 11, 34, 23, 42, 9, 6, 17, 37, 41, 43, 37, 36, 46, 13, 22, 23, 29,
         37, 30, 48, 13, 6, 27, 47, 15, 2, 9, 10, 26, 42, 31, 7, 38, 27, 44, 41, 43, 2, 4, 15, 2, 14, 33, 28, 43, 30,
         40, 30, 32, 50, 42, 24, 32, 36, 12, 13, 33, 42, 13, 27, 32, 22, 22, 31, 29, 6, 7, 7, 47, 27, 45, 26, 5, 47, 21,
         14, 5, 19, 20, 6, 47, 21, 41, 49, 14, 19, 33, 40, 13, 35, 11, 4, 13, 41, 47, 1, 26, 37, 34, 12, 11, 48, 35, 38,
         21, 40, 5, 33, 41, 14, 44, 8, 15, 33, 22],

    ]

    for t in tests:
        print(t)
        # print(obj.candy(t), end="\n\n")

#
# from random import randint
# def gen_test(length, max_n, min_n):
#     return [randint(min_n, max_n) for _ in range(length)]
# print(gen_test(10000, 50, 0))
