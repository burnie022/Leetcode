"""
Given an array A of integers, for each integer A[i] we need to choose either x = -K or x = K, and add
x to A[i] (only once).
After this process, we have some array B.
Return the smallest possible difference between the maximum value of B and the minimum value of B.

Example 1:
    Input: A = [1], K = 0
    Output: 0
    Explanation: B = [1]
Example 2:
    Input: A = [0,10], K = 2
    Output: 6
    Explanation: B = [2,8]
Example 3:
    Input: A = [1,3,6], K = 3
    Output: 3
    Explanation: B = [4,6,3]

Note:
    1 <= A.length <= 10000
    0 <= A[i] <= 10000
    0 <= K <= 10000
"""
from typing import List

def smallestRangeII(A: List[int], K: int) -> int:
    if len(A) < 2:
        return 0
    min_val = max_val = A[0]
    for n in A:
        if n > max_val:
            max_val = n
        elif n < min_val:
            min_val = n

    return min(abs((max_val - K) - (min_val + K)), max_val - min_val)

    mid = 1 + min_val + int((max_val - min_val) / 2)
    # top_min, top_max = max_val - K
    # bottom_min, bottom_max = min_val + K

    # if max_val - K >= mid:
    #     return (max_val - K) - (min_val + K)
    #
    # mid = 1 + min_val + int((max_val - min_val) / 2)
    #
    # for n in A:
    #     if n < mid and n > min_val:
    #         min_val = n
    #     elif n >= mid and max_val > n:
    #         max_val = n
    #
    # return abs((min_val + K) - (max_val - K))

    m_low, m_high = min_val, max_val
    for n in A:
        if n < mid and n > m_low:
            m_low = n
        elif n >= mid and m_high > n:
            m_high = n

    min_max = sorted([max_val - K, min_val + K, m_high - K, m_low + K])
    return min(min_max[-1] - min_max[0], A[-1] - A[0])


# A leetcode answer
def smallestRangeIILC(A: List[int], K: int) -> int:
    if len(A) < 2:
        return 0
    A = sorted(A)
    min_A, max_A = A[0], A[-1]
    ans = max_A - min_A

    for i in range(len(A) - 1):
        max_K = max(A[i] + K, max_A - K)
        min_K = min(min_A + K, A[i + 1] - K)
        ans = min(ans, max_K - min_K)

    return ans


# Test cases
tests = [
    ([1], 0),
    ([0,10], 2),
    ([1,3,6], 3),
    ([1], 0),
    ([1,3,5], 3),
    ([1], 10),
    ([4018, 8119, 6982, 7065, 4280, 7584, 1644, 8692, 4884, 1041, 3277, 4588, 574, 1530, 7480, 6604, 9819, 1601, 875, 3050, 5567, 3607, 4664, 7557, 4408, 9398, 8489, 7500, 3606, 7633, 417, 4606, 7455, 5358, 235, 84, 1364, 9094, 6493, 1712, 9196, 3047, 9124, 6045, 1707, 5273, 4322, 4861, 883, 16, 8079, 4742, 6006, 9126, 5133, 7743, 2932, 3723, 1133, 1363, 9864, 5490, 3902, 782, 7992, 6654, 1030, 9049, 9481, 579, 9847, 3447, 9237, 5766, 4560, 6595, 3920, 3316, 7472, 793, 8502, 3979, 6942, 437, 9474, 7750, 9102, 2909, 3268, 23, 269, 2505, 2825, 4204, 4811, 3738, 1098, 9617, 5569, 5231, 2969, 1731, 4394, 6942, 9748, 5448, 6097, 8786, 1646, 3597, 6937, 1230, 1408, 3019, 1656, 132, 8779, 357, 3004, 3384, 2706, 8701, 6514, 9720, 8386, 1685, 7704, 7006, 4761, 6700, 3246, 6215, 3938, 9523, 4261, 3139, 6598, 3656, 7287, 6785, 2345, 1865, 3804, 9422, 645, 2089, 9702, 2917, 7392, 8794, 120, 8275, 5668, 281, 1050, 8226, 4850, 3199, 4730, 8432, 2535, 2609, 32, 8085, 6669, 1887, 2685, 3834, 7360, 4300, 8488, 8137, 9691, 1732, 5671, 8794, 4947, 502, 1709, 5903, 8937, 8016, 2296, 4358, 2989, 9465, 1986, 7855, 3421, 6914, 6616, 5960, 7636, 5438, 8550, 5559, 6209, 6573, 9591, 8599, 4955, 7869, 7241, 2890, 464, 9695, 9813, 5444, 5685, 7517, 4068, 9754, 7636, 7516, 8231, 1040, 5262, 3250, 9762, 4191, 1277, 1451, 9686, 2741, 7404, 484, 7766, 3815, 5286, 2237, 1372, 4615, 1188, 7985, 4424, 2487, 5937, 1883, 5460, 3516, 617, 7488, 690, 7960, 6848, 6831, 3946, 2353, 867, 541, 6709, 6810, 2895, 2105, 8584, 3447, 412, 3163, 9463, 6452, 6054, 9402, 5534, 4822, 9728, 8073, 2921, 5331, 3947, 3412, 7130, 4906, 2895, 8496, 8307, 7848, 7928, 539, 4407, 5448, 5170, 5139, 8178, 9046, 8235, 7878, 9337, 4286, 9208, 6053, 6139, 3558, 8969, 2924, 5087, 8677, 2930, 6568, 3699, 6880],
    100),
    ([4018, 8119, 6982, 7065, 4280, 7584, 1644, 8692, 4884, 1041, 3277, 4588, 574, 1530, 7480, 6604, 9819, 1601, 875,
      3050, 5567, 3607, 4664, 7557, 4408, 9398, 8489, 7500, 3606, 7633, 417, 4606, 7455, 5358, 235, 84, 1364, 9094,
      6493, 1712, 9196, 3047, 9124, 6045, 1707, 5273, 4322, 4861, 883, 16, 8079, 4742, 6006, 9126, 5133, 7743, 2932,
      3723, 1133, 1363, 9864, 5490, 3902, 782, 7992, 6654, 1030, 9049, 9481, 579, 9847, 3447, 9237, 5766, 4560, 6595,
      3920, 3316, 7472, 793, 8502, 3979, 6942, 437, 9474, 7750, 9102, 2909, 3268, 23, 269, 2505, 2825, 4204, 4811, 3738,
      1098, 9617, 5569, 5231, 2969, 1731, 4394, 6942, 9748, 5448, 6097, 8786, 1646, 3597, 6937, 1230, 1408, 3019, 1656,
      132, 8779, 357, 3004, 3384, 2706, 8701, 6514, 9720, 8386, 1685, 7704, 7006, 4761, 6700, 3246, 6215, 3938, 9523,
      4261, 3139, 6598, 3656, 7287, 6785, 2345, 1865, 3804, 9422, 645, 2089, 9702, 2917, 7392, 8794, 120, 8275, 5668,
      281, 1050, 8226, 4850, 3199, 4730, 8432, 2535, 2609, 32, 8085, 6669, 1887, 2685, 3834, 7360, 4300, 8488, 8137,
      9691, 1732, 5671, 8794, 4947, 502, 1709, 5903, 8937, 8016, 2296, 4358, 2989, 9465, 1986, 7855, 3421, 6914, 6616,
      5960, 7636, 5438, 8550, 5559, 6209, 6573, 9591, 8599, 4955, 7869, 7241, 2890, 464, 9695, 9813, 5444, 5685, 7517,
      4068, 9754, 7636, 7516, 8231, 1040, 5262, 3250, 9762, 4191, 1277, 1451, 9686, 2741, 7404, 484, 7766, 3815, 5286,
      2237, 1372, 4615, 1188, 7985, 4424, 2487, 5937, 1883, 5460, 3516, 617, 7488, 690, 7960, 6848, 6831, 3946, 2353,
      867, 541, 6709, 6810, 2895, 2105, 8584, 3447, 412, 3163, 9463, 6452, 6054, 9402, 5534, 4822, 9728, 8073, 2921,
      5331, 3947, 3412, 7130, 4906, 2895, 8496, 8307, 7848, 7928, 539, 4407, 5448, 5170, 5139, 8178, 9046, 8235, 7878,
      9337, 4286, 9208, 6053, 6139, 3558, 8969, 2924, 5087, 8677, 2930, 6568, 3699, 6880],
     3000),
    ([4018, 8119, 6982, 7065, 4280, 7584, 1644, 8692, 4884, 1041, 3277, 4588, 574, 1530, 7480, 6604, 9819, 1601, 875, 3050, 5567, 3607, 4664, 7557, 4408, 9398, 8489, 7500, 3606, 7633, 417, 4606, 7455, 5358, 235, 84, 1364, 9094, 6493, 1712, 9196, 3047, 9124, 6045, 1707, 5273, 4322, 4861, 883, 16, 8079, 4742, 6006, 9126, 5133, 7743, 2932, 3723, 1133, 1363, 9864, 5490, 3902, 782, 7992, 6654, 1030, 9049, 9481, 579, 9847, 3447, 9237, 5766, 4560, 6595, 3920, 3316, 7472, 793, 8502, 3979, 6942, 437, 9474, 7750, 9102, 2909, 3268, 23, 269, 2505, 2825, 4204, 4811, 3738, 1098, 9617, 5569, 5231, 2969, 1731, 4394, 6942, 9748, 5448, 6097, 8786, 1646, 3597, 6937, 1230, 1408, 3019, 1656, 132, 8779, 357, 3004, 3384, 2706, 8701, 6514, 9720, 8386, 1685, 7704, 7006, 4761, 6700, 3246, 6215, 3938, 9523, 4261, 3139, 6598, 3656, 7287, 6785, 2345, 1865, 3804, 9422, 645, 2089, 9702, 2917, 7392, 8794, 120, 8275, 5668, 281, 1050, 8226, 4850, 3199, 4730, 8432, 2535, 2609, 32, 8085, 6669, 1887, 2685, 3834, 7360, 4300, 8488, 8137, 9691, 1732, 5671, 8794, 4947, 502, 1709, 5903, 8937, 8016, 2296, 4358, 2989, 9465, 1986, 7855, 3421, 6914, 6616, 5960, 7636, 5438, 8550, 5559, 6209, 6573, 9591, 8599, 4955, 7869, 7241, 2890, 464, 9695, 9813, 5444, 5685, 7517, 4068, 9754, 7636, 7516, 8231, 1040, 5262, 3250, 9762, 4191, 1277, 1451, 9686, 2741, 7404, 484, 7766, 3815, 5286, 2237, 1372, 4615, 1188, 7985, 4424, 2487, 5937, 1883, 5460, 3516, 617, 7488, 690, 7960, 6848, 6831, 3946, 2353, 867, 541, 6709, 6810, 2895, 2105, 8584, 3447, 412, 3163, 9463, 6452, 6054, 9402, 5534, 4822, 9728, 8073, 2921, 5331, 3947, 3412, 7130, 4906, 2895, 8496, 8307, 7848, 7928, 539, 4407, 5448, 5170, 5139, 8178, 9046, 8235, 7878, 9337, 4286, 9208, 6053, 6139, 3558, 8969, 2924, 5087, 8677, 2930, 6568, 3699, 6880],
     5000), # answer should be 9763
    ([100, 800, 5000], 4500),
    ([100, 800, 5000], 4950),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 7),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 8),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 9),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10)

]

tests2 = [n for n in range(1, 11)]
a = [n for n in range(1, 11)]

for t in tests:
    print(t[0])
    print(t[1])
    # print(smallestRangeIILC(*t))
    # print(f"({a}, {t}),")
    # # print(t)


import random

def listGen(n):
    li = []
    for _ in range(n):
        li.append(random.randint(0, 10000))
    print(li)


# print(listGen(300))
